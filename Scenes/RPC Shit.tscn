[gd_scene load_steps=2 format=2]

[sub_resource type="GDScript" id=1]
script/source = "extends Node

# warnings-disable

var discord_rpc: DiscordRPC = DiscordRPC.new()

# https://discord.com/developers/applications/
# application_id: Found in 'Genneral' information' & OAuth2'
# secret: Found in 'OAuth2'
export(int) var application_id = 864980501004812369
var secret: String = \"\"
var access_token: String

var can_do_shit:bool = false

func _ready() -> void:
	if Settings.get_data(\"discord_rpc\"):
		var file = File.new()
		file.open(\"res://Scripts/Autoload/secret.txt\", File.READ)
		
		if file.get_as_text() != null:
			secret = file.get_as_text()
		
		file.close()
		
		if secret == \"\": # error checking bullshit
			print(\"NO RPC SECRET BS\")
		else:
			discord_rpc.connect(\"rpc_ready\", self, \"_on_ready\")
			discord_rpc.connect(\"authorized\", self, \"_on_authorized\")
			discord_rpc.connect(\"authenticated\", self, \"_on_authenticated\")
			discord_rpc.connect(\"rpc_error\", self, \"_on_error\")
			discord_rpc.connect(\"notification_create\", self, \"_on_notification\")

			add_child(discord_rpc)
			
			discord_rpc.establish_connection(application_id)

func _on_ready(user: Dictionary) -> void:
	print(\"Discord RPC Ready\")
	print(\"Client username: \", user[\"username\"])
	
	if access_token.empty():
		# Authorize your application for the first time or when 'access_token' expires
		var scopes: PoolStringArray = [\"rpc\", \"rpc.notifications.read\"]
		discord_rpc.authorize(scopes, secret)
	else:
		discord_rpc.authenticate(access_token)

func _on_authorized(access_token: String) -> void:
	# You must save the 'access_token' to authenticate directly next time
	pass

func _on_authenticated(_application: Dictionary, expires: String) -> void:
	print(\"access_token expiry: \", expires)
	print(\"Authenticated !\")
	# Now you can call RPC commands that require specific scopes
	
	discord_rpc.subscribe(\"NOTIFICATION_CREATE\")
	
	can_do_shit = true
	update_presence(\"In the Menus\")

func _on_error(error: int) -> void:
	print(\"RPC Connection ERROR: \", error)

func _on_notification(channel_id: String, message: Dictionary, icon_url, title: String, body: String) -> void:
	# Do stuff
	pass

func update_presence(details: String, state: String = \"  \", image:String = \"logo\", image_hover:String = \"Leather Engine\"):
	if can_do_shit:
		discord_rpc.set_activity({
			\"pid\": OS.get_process_id(), # process id i guess
			\"activity\": {
				\"state\": state, # thing below details
				\"details\": details, # thing below title
				\"assets\": {
					\"large_image\": image, # cool image B)
					\"large_text\": image_hover # text hovering on image
				},
				\"instance\": true # idk what this does lmao just keep it to be safe
			}
		})
"

[node name="The Boy" type="Node2D"]
script = SubResource( 1 )
